server:
  port: 8085

spring:
  application:
    name: USER-SERVICE
  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: admin
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  config:
    import: configserver:http://localhost:8089
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-64205235.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorizationGrantType: client_credentials
            scope: internal
            clientId: 0oadikjoi0MUu96rN5d7
            clientSecret: lPUXiaNMdQhvQzeZGF_n2TfqFPg3S8qcjk19K_32PzQEkhzEd4R5rxuFD1oymgGt

        provider:
          okta:
            issuerUri: https://dev-64205235.okta.com/oauth2/default




#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-Url:
#      defaultZone: http://localhost:8761/eureka

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: always

resilience4j:
  circuit-breaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

  retry:
    instances:
      ratingHotelService:
        maxAttempts: 3
        waitDuration: 2s


  ratelimiter:
    instances:
      userRateLimiter:
        limitRefreshPeriod: 3s
        limitForPeriod: 2
        timeoutDuration: 0s


okta:
  oauth2:
    issuer: https://dev-64205235.okta.com/oauth2/default
    audience: api://default






